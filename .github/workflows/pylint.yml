---
name: run-tests

# yamllint disable-line rule:truthy
on:
  - push

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}


      # - run: echo "cache_id=$(date --utc '+%V')" >> $GITHUB_ENV

      - uses: actions/cache@v4
        with:
          key: project-${{ env.cache_id }}
          path: ~/.local
          restore-keys: |
            project-

      # # Prepare project dependencies
      # - name: Add .cache/bin to PATH
      #   run: |
      #     mkdir -p "${{ github.workspace }}/.cache/bin"
      #     mkdir -p "${{ github.workspace }}/.cache/poetry/bin"
      #     echo "${{ github.workspace }}/.cache/bin" >> $GITHUB_PATH
      #     echo "${{ github.workspace }}/.cache/poetry/bin" >> $GITHUB_PATH

      - name: Install go-task
        run: |
          sh -c "$(curl --location https://taskfile.dev/install.sh)" -- -d -b ~/.local/bin

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          virtualenvs-path: .venv
          installer-parallel: true

      - name: Setup a local virtual environment (if no poetry.toml file)
        run: |
          echo pwd=$PWD
          echo home=$HOME

          poetry env info
          poetry config --list

      # poetry config cache-dir "${{ github.workspace }}/.cache/poetry" --local
      # poetry config virtualenvs.path "${{ github.workspace }}/.cache/poetry" --local
      # poetry config virtualenvs.create true --local
      # poetry config virtualenvs.in-project true --local

      - name: Install dependencies
        run: |
          find . | sort
          poetry install

          find . | sort

          poetry run task test
