---

name: gen-documentation

# yamllint disable-line rule:truthy
on:
  push:
    branches:
      - main
      - develop

permissions:
  contents: write
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Install Graphviz
        run: |
          sudo apt-get update
          sudo apt-get install -y graphviz

      # Prepare the environment
      - uses: actions/checkout@v4
      - name: Configure Git Credentials
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - run: echo "cache_id=$(date --utc '+%V')" >> $GITHUB_ENV
      - uses: actions/cache@v4
        with:
          key: mkdocs-material-${{ env.cache_id }}
          path: .cache
          restore-keys: |
            mkdocs-material-

      # Prepare project dependencies
      - name: Add .cache/bin to PATH
        run: |
          mkdir -p "${{ github.workspace }}/.cache/bin"
          mkdir -p "${{ github.workspace }}/.cache/poetry/bin"
          echo "${{ github.workspace }}/.cache/bin" >> $GITHUB_PATH
          echo "${{ github.workspace }}/.cache/poetry/bin" >> $GITHUB_PATH

      - name: Install go-task
        run: |
          sh -c "$(curl --location https://taskfile.dev/install.sh)" -- -d -b .cache/bin

      - name: Install poetry
        uses: abatilo/actions-poetry@v3
        with:
          poetry-version: "1.8.5"

      - name: Setup a local virtual environment (if no poetry.toml file)
        run: |
          poetry config cache-dir "${{ github.workspace }}/.cache/poetry" --local
          poetry config virtualenvs.path "${{ github.workspace }}/.cache/poetry" --local
          poetry config virtualenvs.create true --local
          poetry config virtualenvs.in-project true --local
          poetry env info
          poetry config --list


      # Install docs dependencies
      - run: poetry install --only docs
      # - run: poetry run pyreverse --help
      - run: poetry run task docs:publish
