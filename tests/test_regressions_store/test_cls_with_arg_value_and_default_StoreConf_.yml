dict_flat_empty:
  ____CONTEXT:
    cls: <class 'superconf.store.StoreConf'>
    default: {}
    value: {}
  get_children(): <UNSET>
  get_children_count: 0
  get_default(): {}
  get_key(): ''
  get_value(): {}
  name: ''
  namef: ''
  str(): '|StoreConf'
  type: <class 'superconf.store.StoreConf'>
dict_flat_mixed:
  ____CONTEXT:
    cls: <class 'superconf.store.StoreConf'>
    default:
      val_bool_true: false
      val_dict_empty: {}
      val_int: 0
      val_int_42: 42
      val_int__51: -51
      val_list_empty: []
      val_none: null
      val_string: string_value
    value:
      val_bool_true: false
      val_dict_empty: {}
      val_int: 0
      val_int_42: 42
      val_int__51: -51
      val_list_empty: []
      val_none: null
      val_string: string_value
  get_children(): <UNSET>
  get_children_count: 0
  get_default():
    val_bool_true: false
    val_dict_empty: {}
    val_int: 0
    val_int_42: 42
    val_int__51: -51
    val_list_empty: []
    val_none: null
    val_string: string_value
  get_key(): ''
  get_value():
    val_bool_true: false
    val_dict_empty: {}
    val_int: 0
    val_int_42: 42
    val_int__51: -51
    val_list_empty: []
    val_none: null
    val_string: string_value
  name: ''
  namef: ''
  str(): '|StoreConf'
  type: <class 'superconf.store.StoreConf'>
dict_flat_none:
  ____CONTEXT:
    cls: <class 'superconf.store.StoreConf'>
    default:
      dict_key1: null
      dict_key2: null
      dict_key3: null
    value:
      dict_key1: null
      dict_key2: null
      dict_key3: null
  get_children(): <UNSET>
  get_children_count: 0
  get_default():
    dict_key1: null
    dict_key2: null
    dict_key3: null
  get_key(): ''
  get_value():
    dict_key1: null
    dict_key2: null
    dict_key3: null
  name: ''
  namef: ''
  str(): '|StoreConf'
  type: <class 'superconf.store.StoreConf'>
dict_flat_string:
  ____CONTEXT:
    cls: <class 'superconf.store.StoreConf'>
    default:
      dict_key1: dict_string_val1
      dict_key2: dict_string_val2
      dict_key3: dict_string_val3
    value:
      dict_key1: dict_string_val1
      dict_key2: dict_string_val2
      dict_key3: dict_string_val3
  get_children(): <UNSET>
  get_children_count: 0
  get_default():
    dict_key1: dict_string_val1
    dict_key2: dict_string_val2
    dict_key3: dict_string_val3
  get_key(): ''
  get_value():
    dict_key1: dict_string_val1
    dict_key2: dict_string_val2
    dict_key3: dict_string_val3
  name: ''
  namef: ''
  str(): '|StoreConf'
  type: <class 'superconf.store.StoreConf'>
dict_flat_string_unset:
  ____CONTEXT:
    cls: <class 'superconf.store.StoreConf'>
    default:
      key1: dict_string_val1
      key2: null
      key3: null
    value:
      key1: dict_string_val1
      key2: null
      key3: null
  get_children(): <UNSET>
  get_children_count: 0
  get_default():
    key1: dict_string_val1
    key2: null
    key3: null
  get_key(): ''
  get_value():
    key1: dict_string_val1
    key2: null
    key3: null
  name: ''
  namef: ''
  str(): '|StoreConf'
  type: <class 'superconf.store.StoreConf'>
list_flat_empty:
  exception: <class 'superconf.exceptions.InvalidValueType'>
list_flat_mixed:
  exception: <class 'superconf.exceptions.InvalidValueType'>
list_flat_none:
  exception: <class 'superconf.exceptions.InvalidValueType'>
list_flat_string:
  exception: <class 'superconf.exceptions.InvalidValueType'>
list_flat_string_unset:
  exception: <class 'superconf.exceptions.InvalidValueType'>
val_bool_true:
  exception: <class 'superconf.exceptions.InvalidValueType'>
val_dict_empty:
  ____CONTEXT:
    cls: <class 'superconf.store.StoreConf'>
    default: {}
    value: {}
  get_children(): <UNSET>
  get_children_count: 0
  get_default(): {}
  get_key(): ''
  get_value(): {}
  name: ''
  namef: ''
  str(): '|StoreConf'
  type: <class 'superconf.store.StoreConf'>
val_int:
  exception: <class 'superconf.exceptions.InvalidValueType'>
val_int_42:
  exception: <class 'superconf.exceptions.InvalidValueType'>
val_int__51:
  exception: <class 'superconf.exceptions.InvalidValueType'>
val_list_empty:
  exception: <class 'superconf.exceptions.InvalidValueType'>
val_none:
  exception: <class 'superconf.exceptions.InvalidValueType'>
val_string:
  exception: <class 'superconf.exceptions.InvalidValueType'>
